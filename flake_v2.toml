# v2:
#  - include "metadata" of flake.nix
#  - for outputs sections v2 makes a lot of assumptions: there is only one 
#    project which you configure
#  - if project section and flake.nix must not exists at the same time. 
#    flake.nix still only provides outputs as per v1
#      or
#  - flake.nix extends the flake.toml
#    { self, nixpkgs, dwarffs }:
#    {
#    
#    }

maintainers = [ "Eelco Dolstra <edolstra@gmail.com>" ]
description = "A description of a flake"

[config]
binary-caches = [ "https://my-cache.example.org" ]

[inputs]
nixpkgs = "20.03"
dwarffs = "master"

[package]
# the same as [project:mkProject]
# for python project use [project:mkProjectPython] or [project:python]
name = "hello"
version = "1.2.0"
src = "./."
platforms = [ "x86_64-linux" "aarch64-macos" ]
dependencies = [
  "nixpkgs#cowsay",
  "nixpkgs#bash",
  "dwarffs",
]
buildPhase = """
  echo "Building hello.sh ..."
  cat > hello <<EOF
  #!$(realpath bash)
  exec $(realpath cowsay) Hello \$1
  EOF
  chmod +x hello
"""
installPhase = """
  mkdir -p $out/bin
  cp ./hello $out/bin/hello
"""
# this is the same as shellHook currently
developPhase = """
"""
# we might also consider splitting it in two: enterDevelopPhase, exitDevelopPhase
